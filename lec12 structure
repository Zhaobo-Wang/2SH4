# include <stdio.h>
# include <stdlib.h>

struct Book{

    int bookId;

    char title[300];

    char author[300];

};

//void bookInput(Book* book);

//void printBook(Book book);

int main(){

struct Book JavaAndC = {1, "JavaAndC", "Chris"};

struct Book CAndPHP = {1, "C and PHP", "Jimbo"};

printf("The bookId is %d, \ntitle: %s, \nauthor: %s \n",JavaAndC.bookId, JavaAndC.title, JavaAndC.author);

return 0;

}

_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

typedef: 直接知道name


# include <stdio.h>
# include <stdlib.h>

struct book{

    int bookId;

    char title[300];

    char author[300];

};

typedef struct book Book;

//void bookInput(Book* book);

//void printBook(Book book);

int main(){

Book JavaAndC = {1, "JavaAndC", "Chris"}; // Book 直接被认可

Book CAndPHP = {1, "C and PHP", "Jimbo"};

printf("The bookId is %d, \ntitle: %s, \nauthor: %s \n",JavaAndC.bookId, JavaAndC.title, JavaAndC.author);

return 0;

}

_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

# include <stdio.h>
# include <stdlib.h>
# include <unistd.h>
# include <time.h>


struct book{

    int bookId;

    char bookTitle[300];

    char author[300];

};//先建立一个struct（object）

typedef struct book Book;//define Book 变成了一种数据类型

int main(){

Book JavaAndC;

Book *JavaAndCptr = &JavaAndC; // 建立一个pointer指针 指向JavaAndC 可以完善（修改）里面的内容

inputBook(JavaAndCptr);//把pointer pass to function

printBook(JavaAndC);

return 0;
}

void inputBook(Book *JavaAndCptr){ // 在这个pointer里面完善JavaAndC的内容

puts("Welcome to the library system!\n");

puts("The system is loading...");

sleep(3);//延迟三秒

JavaAndCptr -> bookId = rand() %100;//随意生成一个bookId
//这里 用箭头 是因为JavaAndCptr 是一个pointer数据类型
// 如果是普通类型的可以用.   book.bookId

puts("Enter the title of the book:");

gets(JavaAndCptr -> bookTitle);

puts("Enter the author of the book:");

gets(JavaAndCptr -> author);

puts("Thanks for the editting the system.");

}

void printBook(Book a){

printf("The bookId is %d,\nTitle is %s,\nThe author is %s.\n", a.bookId, a.bookTitle, a.author);

}
